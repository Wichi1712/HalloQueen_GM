<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Opciones de ventana
//window_set_fullscreen(false);
window_set_caption("HalloQueen");
window_center();
display_set_gui_size(300,300);
background_vspeed[0] = 0.2;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variables
cantidadEnemigos = 20;
contadorEnemigos = 0;
score = 0;

estadoJuego = "inicio";
nivelJuego = 1;
vidasPlayer = 3;



//Alarma para iniciar menu
alarm[0] = room_speed * 2;

//test
//instance_create( room_width, 100, o_brujita);

//Selector
posTxtPlay = 150;
posTxtWindow = 180;
txtWindow = "Screen#Maximize";
selectorPos = posTxtPlay;
pantallaCompleta = false;
//window_set_fullscreen(pantallaCompleta);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crea enemigos
randomize();
InicioEnemigoY = irandom_range(-60,-200);
InicioEnemigoX = irandom_range(30, room_width-30);

if (estadoJuego == "jugar"){
    if (!place_meeting(InicioEnemigoX, InicioEnemigoY, o_enemigo)){
        instance_create( InicioEnemigoX, InicioEnemigoY, o_enemigo);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Estado jugar
//Retorna al estado jugar despues de haber pasado
//por el estado informaci√≥n
estadoJuego = "jugar";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Inicia menu
//room_goto_next();
estadoJuego = "menu";

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Crea enemigos en posiciones aleatorias
if (estadoJuego == "jugar") {

    //scr_creacion_reposicionamiento();
    //Crea enemigos en la alarma 2
    if ((instance_number( o_enemigo) &lt; cantidadEnemigos) &amp;&amp; (alarm[2] &lt; 0)){
        alarm[2] = room_speed * 2;
    }
    
    /*
    //Crea enemigos en posiciones aleatorias
    randomize();
    InicioEnemigoY = irandom_range(-60,-200);
    InicioEnemigoX = irandom_range(30, room_width-30);

    if (instance_number( o_enemigo) &lt; cantidadEnemigos) {
        if (!place_meeting(InicioEnemigoX, InicioEnemigoY, o_enemigo)){
            if (distance_to_object( o_enemigo) &gt; 100){
                instance_create( InicioEnemigoX, InicioEnemigoY, o_enemigo);
            }
        }
    }
    */
    
    
    //Cambio de nivel
    if ( contadorEnemigos &gt;= 20){
        alarm[1] = room_speed * 5;
        //cantidadEnemigos = 30;
        nivelJuego++;
        contadorEnemigos = 0;
        estadoJuego = "informacion";
        scr_destruyeEnemigos();
    }
    
    //Crea player
    if !instance_exists( o_brujita){
        instance_create( room_width/2,250, o_brujita);
    }
}else
if (estadoJuego == "menu") {

    //Selector
    //Alinea el selector con el texto
    if keyboard_check_pressed( vk_up) selectorPos = posTxtPlay;//Posicion de texto play
    if keyboard_check_pressed( vk_down) selectorPos = posTxtWindow;//Posicion de texto window
    
    //Ejecuta un accion dependiendo de la posicion del selector
    if keyboard_check_pressed( vk_enter){
        if selectorPos == posTxtPlay estadoJuego = "jugar";else
        if selectorPos == posTxtWindow {
            if(pantallaCompleta){
                pantallaCompleta=false;
                txtWindow = "Screen#Maximize";
            }else
            if(!pantallaCompleta){
                pantallaCompleta=true;
                txtWindow = "Screen#Minimize";
            }
    
            window_set_fullscreen(pantallaCompleta);
        }
    }
}


//Salir del juego
if keyboard_check_pressed( vk_escape) game_end();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desarrollador
//if keyboard_check( vk_escape) game_end();
//if keyboard_check( vk_f1) game_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GUI
draw_set_halign( fa_center);
draw_set_color( c_white);

switch (estadoJuego){
    case "inicio":
        draw_background( bg_fondoMenu,0,0);
        draw_text(room_width / 2, room_height / 2, "Pixeltron");
        draw_text(room_width / 2, room_height / 2 + 100, "by WiChi 2020");
    break;
    
    case "menu":
        draw_background( bg_fondoMenu,0,0);
        draw_text(room_width/2,posTxtPlay, "PLay");
        //draw_sprite( spr_btnPlay,0, room_width/2,100);
        draw_text(room_width/2,posTxtWindow, txtWindow);
        draw_text(room_width/2, room_height - 30, "Press ESCAPE to exit");
        
        //Selector
        draw_text(room_width/2 - 45, selectorPos, "&gt;&gt;");
        draw_text(room_width/2 + 45, selectorPos, "&lt;&lt;");
    break;
    
    case "jugar":
        draw_text(40,10, "Nivel: " + string(nivelJuego));
        draw_text(room_width - 60,10, "Score: " + string(score));
    break;
    
    case "informacion":
        draw_rectangle_color(0, 0, room_width, room_height, c_yellow,c_black,c_black,c_yellow,0);
        draw_text(room_width/2,100, "Buen trabajo");
        draw_text(room_width/2,120, "Nivel superado: " + string(nivelJuego - 1));
        draw_text(room_width/2,140, "Siguiente nivel: " + string(nivelJuego));
    break;
    
    //default: STATEMENT;
}
 
/*
if estadoJuego == "Inicio" {
    draw_text(room_width / 2, room_height / 2, "Pixeltron");
    draw_text(room_width / 2, room_height / 2 + 200, "by Wilfredo Chipana 2020");
}else
if estadoJuego == "menu"{
    draw_text( room_width/2,100, "Este es el menu");
    draw_text( room_width/2,100, "Pulse cualquier boton");
    
}else
if estadoJuego == "jugar"{
    draw_text(10,10, "Nivel: " + string(nivelJuego));    
}
*/

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Desarrollo
//draw_text(10,30, "Alarma 0: " + string(alarm[0]));
//draw_text(10,50, "Cantidad enemigos: " + string(cantidadEnemigos));
//draw_text(10,70, "Contador enemigos: " + string(contadorEnemigos));
//draw_text(10,90, "Alarma 1: " + string(alarm[1]));
//draw_text(10 , 110, "Ancho de room" + string( room_width));

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
